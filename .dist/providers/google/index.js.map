{"version":3,"names":[],"mappings":"","sources":["providers/google/index.js"],"sourcesContent":["module.exports = google;\n\n\nfunction google(api, config) {\n  const status = {};\n\n  return {\n    createMachine,\n    destroyMachine,\n\n    verifyAccount,\n\n    status\n  };\n\n  function createMachine(machineDescription) {\n    return new Promise((resolve, reject) => {\n      const api = new api(config.token),\n            {\n              id,\n              location,\n              size,\n              image,\n              keys,\n              userData\n            } = machineDescription;\n\n      // create code goes here\n    });\n  }\n\n  function destroyMachine(machine) {\n    return new Promise((resolve, reject) => {\n      const api = new api(config.token);\n\n      // destroy code goes here\n    });\n  }\n\n  function verifyAccount() {\n    return new Promise((resolve, reject) => {\n      resolve();\n      // reject({error: 'Unauthorized', provider: google.$name});\n    });\n  }\n\n  function apiCallbackHandler(resolve, reject) {\n    return (error, data) => {\n      if (error) reject(error, data);\n      else resolve(data);\n    };\n  }\n}\n\ngoogle.$name = 'google';\ngoogle.$targets = ['coreos'];\ngoogle.$credentialSchema = {\n  project: {\n    type: 'string',\n    header: 'Project Name (must already exist)'\n  },\n  account: {\n    type: 'string',\n    header: 'Account'\n  }\n};\n"],"file":"providers/google/index.js","sourceRoot":"/source/"}