{"version":3,"names":[],"mappings":"","sources":["cloud/expand.js"],"sourcesContent":["import _ from 'lodash';\n\n\n// yeah, a Promise isn't really necessary here, but it's 'needed' in validate.js\nmodule.exports = cloud => new Promise((resolve, reject) => {\n  const {configuration, roles, containers} = cloud;\n\n  expandRoles(configuration, roles);\n  inject$all(roles);\n  expandContainers(roles, containers);\n\n  resolve(cloud);\n\n  function expandRoles(configuration, roles) {\n    _.each(configuration, (roleConfiguration, roleName) => {\n      if (typeof roleConfiguration === 'number') {\n        if (!roles[roleName]) {\n          roles[roleName] = [roleName];\n        }\n      }\n      else {\n        expandRoles(roleConfiguration, roles);\n      }\n    });\n  }\n\n  // Should we be using Sets?\n  // TODO: investigate ^^\n  function inject$all(roles) {\n    const {$all} = roles;\n\n    // Yeah, yeah, it's slow...\n    if ($all && $all.length > 0) {\n      _.each(roles, (role, roleName) => {\n        if (roleName !== '$all') {\n          _.each($all, $allRole => {\n            if (!_.contains(role, $allRole)) role.unshift($allRole);\n          });\n        }\n      });\n    }\n  }\n\n  function expandContainers(roles, containers) {\n    _.each(roles, (roleConfiguration, roleName) => {\n      if (roleName === '$all') return;\n\n      if (Array.isArray(roleConfiguration)) {\n        _.each(roleConfiguration, containerName => {\n          if (!containers[containerName]) {\n            containers[containerName] = {container: containerName};\n          }\n        });\n      }\n      else throw new Error(`What is this role:? ${roleName}`);\n    });\n\n    _.each(containers, (definition, containerName) => {\n      const {container, namespace} = definition;\n\n      definition.container = containerName; //Technically this overwrites the value, but technically it should be the same value [you don't need to define it!]\n      definition.name = (namespace ? namespace + '/' : '') + containerName;\n    });\n  }\n});"],"file":"cloud/expand.js","sourceRoot":"/source/"}