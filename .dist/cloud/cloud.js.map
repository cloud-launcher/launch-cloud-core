{"version":3,"names":[],"mappings":"","sources":["cloud/cloud.js"],"sourcesContent":["import expand from './expand';\nimport validate from './validate';\nimport generatePlan from './generatePlan';\nimport executePlan from './executePlan';\nimport destroyCloud from './destroy';\n\nimport _ from 'lodash';\n\nconst dockerHubApiRoot = 'https://registry.hub.docker.com',\n      discoveryEtcdApiRoot = 'https://discovery.etcd.io';\n\nmodule.exports = (cloud, providers, log, request, proxies) => {\n  return {launch, destroy};\n\n  function launch() {\n    return expand(cloud)\n            .then(cloud => validate(cloud, providers, log, request, proxies.dockerHubApiRoot || dockerHubApiRoot))\n            .then(cloud => generatePlan(cloud, providers, log, request, proxies.discoveryEtcdApiRoot || discoveryEtcdApiRoot))\n            .then(plan => executePlan(plan, providers, log))\n            .then(launchedCloud => {\n              return launchedCloud;\n            });\n  }\n\n  function destroy() {\n    return destroyCloud(cloud, providers, log);\n  }\n};\n\n\n\n\n// function* generator(q) {\n//   var next = 0;\n\n//   q.onRemoved(index => {\n//     if (next > index) {\n//       next = next == 0 ? q.length - 1 : next - 1;\n//     }\n//   });\n\n//   q.onAdded(index => {\n//     if (index <= next) {\n//       //next =\n//     }\n//   });\n\n//   while (q.length > 0) {\n//     yield q[next];\n//     next = (next + 1) % q.length;\n//   }\n// }\n\n// for (var result of generator(q)) {\n//   if (result.done) remove this generator;\n//   else yield result;\n// }\n\n\n\n// cloudSchema = {\n//   domain: '',\n//   locations: {providerName: [locations]},\n//   configuration: {roleName: machineCount},\n//   defaultSize: {roleName: 'machineSize' || roleName: {providerName: 'machineSize'}},\n//   roles: {roleName: roleDefinition},\n//   containers: {containerName: containerDefinition}\n// }\n\n\n// manifest = {\n//   locations: [{\n//     id: ''\n//     name: ''\n//     provider: '',\n\n//     machines: [{\n//       id,\n//       location: 'location',\n//       size: '',\n//       image: '',\n//       keys: [],\n//       userData: 'cloud-config goes here'\n//     }]\n//   }]\n// }\n\n\n// let manifest = {\n//   locations: [{\n//     id: '',\n//     name: '',\n//     provider: '',\n//     machines: ['machineID']\n//   }],\n//   debug: {\n\n//   }\n// };\n"],"file":"cloud/cloud.js","sourceRoot":"/source/"}